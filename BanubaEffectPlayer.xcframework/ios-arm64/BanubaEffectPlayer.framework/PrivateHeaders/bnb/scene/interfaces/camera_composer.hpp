/// \file
/// \addtogroup Scene
/// @{
///
// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from scene.djinni

#pragma once

#include <bnb/utils/defs.hpp>
#include <cstdint>
#include <memory>
#include <string>

namespace bnb { namespace interfaces {

class image;

/** Class, which provide camera composer algorithms adjust interface. */
class BNB_EXPORT camera_composer {
public:
    virtual ~camera_composer() {}

    /**
     * Pass empty path to reset background image.
     * Supported extensions: jpg, jpeg, png, mp4, gif
     */
    virtual void set_background_image(const std::string & path) = 0;

    virtual std::shared_ptr<image> get_background_image() const = 0;

    virtual void enable_blur(bool enable) = 0;

    virtual void set_blur_radius(int32_t radius) = 0;

    virtual void set_bg_transparency_factor(float factor) = 0;

    virtual void set_rotation(float degrees) = 0;

    virtual void set_scale(float x, float y) = 0;

    virtual void set_content_mode(int32_t mode) = 0;

    virtual void set_background_color(float r, float g, float b, float a) = 0;
};

} }  // namespace bnb::interfaces
/// @}

